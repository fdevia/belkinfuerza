{"version":3,"sources":["components/Conversacion/Conversacion.jsx","components/Conversaciones/Conversaciones.jsx","components/TituloConversacion/backArrow.svg","components/TituloConversacion/options.svg","components/ModalAgentes/close.svg","components/ModalAgentes/ModalAgentes.jsx","components/TituloConversacion/TituloConversacion.jsx","components/InputMensaje/sendIcon.svg","components/InputMensaje/quickMessages.svg","components/InputMensaje/InputMensaje.jsx","components/ConversacionActual/ChatCenterLogo.svg","components/MensajeRecibido/MensajeRecibido.jsx","components/MensajeEnviado/MensajeEnviado.jsx","components/MensajeServidor/MensajeServidor.jsx","components/Mensajes/Mensajes.jsx","components/ConversacionActual/ConversacionActual.jsx","components/HeaderConversaciones/ChatCenterLogo.svg","components/HeaderConversaciones/options.svg","components/HeaderConversaciones/lupa.svg","components/HeaderConversaciones/HeaderConversaciones.jsx","components/Chat/sendMessage.mp3","components/Chat/newMessage.mp3","components/Chat/newMessageAbierto.mp3","components/Chat/newConversacion.mp3","components/Chat/Chat.jsx","components/Login/ChatCenterLogo.svg","components/Login/Login.jsx","App.js","serviceWorker.js","index.js"],"names":["parseFecha","fecha","partes","split","ano","substring","mes","dia","Conversacion","props","renderUltimoMensaje","mensaje","conversacion","mensajes","length","mensajeBuscado","fuente","className","texto","agente","renderPendiente","Fragment","renderUnselected","onClick","handleClick","nameUsr","numTel","selected","id","_id","activa","createdByUserId","Conversaciones","historial","conversaciones","map","ModalAgentes","handleClose","src","close","alt","agentes","handleTransferir","cedula","numTelUsr","name","logged","TituloConversacion","useState","menuAbierto","setMenuAbierto","showAgents","setShowAgents","setAgentes","handleModal","fetch","currentUser","method","headers","then","response","json","handleBack","backArrow","options","type","onChange","e","setEsperando","archivoSeleccionado","target","files","item","fd","FormData","append","axios","post","data","buscada","find","conv","setConversaciones","setSelected","document","getElementById","play","catch","err","console","log","esperando","for","handleTerminarConversacion","InputMensaje","inputRef","useRef","mensajesRapidos","setMensajesRapidos","handleSend","sendMessage","current","value","handleSetQuickMessage","message","disabled","ref","onKeyPress","key","sendIcon","quickImage","usuario","class","final","hora","MensajeRecibido","parts","MensajeEnviado","mensajeid","url","mimetype","title","partType","payload","content","_downloadURL","text","MensajeServidor","Mensajes","bottomRef","containerRef","useEffect","d","scrollTop","scrollHeight","scrollIntoView","renderMensaje","recibido","ConversacionActual","nombre","Logo","HeaderConversaciones","handleHistorial","setHistorial","undefined","search","a","newConversaciones","i","usrtelnum","push","logo","lupa","logout","sessionStorage","clear","getWindowDimensions","window","width","innerWidth","height","innerHeight","compareConversations","conv1","conv2","partes1","ano1","mes1","final1","dia1","hora1","minuto1","segundos1","date1","Date","parseInt","partes2","ano2","mes2","final2","dia2","hora2","minuto2","segundos2","date2","getTime","Chat","socket","socketIOClient","handleResize","setState","windowDimensions","navigator","sendBeacon","preventDefault","pedirConversaciones","unsuscribeDeConversacion","agenteNuevo","cliente","configurarSocket","on","error","alert","emit","clientId","suscribirseAConversacion","receiveSound","sort","state","selectedConv","firstLoad","chatkit","rooms","Object","values","subscribeToRoomMultipart","roomId","hooks","onMessage","addMessageToConversacion","playMessageSound","messageLimit","fetchMultipartMessages","direction","limit","messages","j","client","newMensaje","senderId","servidor","mode","body","JSON","stringify","from","to","renderChiquito","principal","renderGrande","addEventListener","this","setInterval","user","password","preload","newMessage","newConversacion","newMessageAbierto","Component","Login","userRef","passwordRef","placeholder","res","setUser","App","setCurrentUser","Boolean","location","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e323842.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Conversacion.css\";\r\n\r\nlet parseFecha = (fecha) => {\r\n  let partes = fecha.split(\"-\");\r\n  let ano = partes[0].substring(2, 5);\r\n  let mes = partes[1];\r\n  let final = partes[2];\r\n  let dia = final.substring(0, 2);\r\n  return `${dia}/${mes}/${ano}`;\r\n};\r\n\r\nfunction Conversacion(props) {\r\n  let renderUltimoMensaje = () => {\r\n    let mensaje =\r\n      props.conversacion.mensajes[props.conversacion.mensajes.length - 1];\r\n\r\n    if (props.conversacion.mensajeBuscado) {\r\n      mensaje = props.conversacion.mensajeBuscado;\r\n    }\r\n\r\n    if (mensaje) {\r\n      if (mensaje.fuente === \"usuario\") {\r\n        return <h6 className=\"ultimoMensaje\">{mensaje.texto}</h6>;\r\n      } else if (mensaje.fuente === \"bot\") {\r\n        return <h6 className=\"ultimoMensaje\">Bot: {mensaje.texto}</h6>;\r\n      } else {\r\n        return <h6 className=\"ultimoMensaje\">Tú: {mensaje.texto}</h6>;\r\n      }\r\n    } else if (mensaje && mensaje.fecha) {\r\n      if (mensaje.agente === \"\") {\r\n        return <h6 className=\"ultimoMensaje\">{mensaje.texto}</h6>;\r\n      } else {\r\n        return (\r\n          <h6 className=\"ultimoMensaje\">\r\n            {mensaje.agente}: {mensaje.texto}\r\n          </h6>\r\n        );\r\n      }\r\n    } else {\r\n      return <h6 className=\"ultimoMensaje\">Cargando...</h6>;\r\n    }\r\n  };\r\n\r\n  let renderPendiente = () => {\r\n    let mensaje =\r\n      props.conversacion.mensajes[props.conversacion.mensajes.length - 1];\r\n    return (\r\n      <React.Fragment>\r\n        {mensaje &&\r\n          (mensaje.fuente === \"usuario\" || mensaje.fuente === \"bot\") && (\r\n            <div className=\"pendiente\" />\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  let renderSelected = () => {\r\n    return (\r\n      <div\r\n        className=\"conversacion conversacionSeleccionada\"\r\n        onClick={() => props.handleClick(props.conversacion)}\r\n      >\r\n        <p className=\"fecha\">\r\n          {parseFecha(\r\n            props.conversacion.mensajes[props.conversacion.mensajes.length - 1]\r\n              .fecha\r\n          )}\r\n        </p>\r\n        {props.conversacion.activa && <div className=\"activa\" />}\r\n        <div className=\"contenedorNombre\">\r\n          <h2 className=\"tituloConversacion\">\r\n            {props.conversacion.createdByUserId || props.conversacion.nameUsr}\r\n          </h2>\r\n        </div>\r\n        {renderUltimoMensaje()}\r\n        {renderPendiente()}\r\n      </div>\r\n    );\r\n  };\r\n  let renderUnselected = () => {\r\n    return (\r\n      <div\r\n        className=\"conversacion\"\r\n        onClick={() => props.handleClick(props.conversacion)}\r\n      >\r\n        <p className=\"fecha\">\r\n          {parseFecha(\r\n            props.conversacion.mensajes[props.conversacion.mensajes.length - 1]\r\n              .fecha\r\n          )}\r\n        </p>\r\n        <div className=\"contenedorNombre\">\r\n          <h2 className=\"tituloConversacion\">\r\n            {props.conversacion.nameUsr || props.conversacion.numTel}\r\n          </h2>\r\n        </div>\r\n        {renderUltimoMensaje()}\r\n        {renderPendiente()}\r\n      </div>\r\n    );\r\n  };\r\n  let renderConversacion = () => {\r\n    return (\r\n      <React.Fragment>\r\n        {((props.conversacion.id &&\r\n          props.conversacion.id === props.selected.id) ||\r\n          (props.conversacion._id &&\r\n            props.conversacion._id === props.selected._id)) &&\r\n          renderSelected()}\r\n        {!(\r\n          (props.conversacion.id &&\r\n            props.conversacion.id === props.selected.id) ||\r\n          (props.conversacion._id &&\r\n            props.conversacion._id === props.selected._id)\r\n        ) && renderUnselected()}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {props.selected && renderConversacion()}\r\n      {!props.selected && renderUnselected()}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Conversacion;\r\n","import React from \"react\";\r\nimport \"./Conversaciones.css\";\r\nimport Conversacion from \"../Conversacion/Conversacion\";\r\n\r\nfunction Conversaciones(props) {\r\n  return (\r\n    <div className=\"independentScroll\">\r\n      <div className=\"margenLista\">\r\n        {props.historial && <div className=\"espacioEnBlanco\" />}\r\n        {props.conversaciones.map((conversacion) => {\r\n          return (\r\n            <Conversacion\r\n              key={conversacion._id}\r\n              selected={props.selected}\r\n              conversacion={conversacion}\r\n              handleClick={props.handleClick}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Conversaciones;\r\n","export default __webpack_public_path__ + \"static/media/backArrow.06af44e7.svg\";","export default __webpack_public_path__ + \"static/media/options.502312f9.svg\";","export default __webpack_public_path__ + \"static/media/close.da5c4222.svg\";","import React from \"react\";\r\nimport \"./ModalAgentes.css\";\r\nimport close from \"./close.svg\";\r\n\r\nfunction ModalAgentes(props) {\r\n  return (\r\n    <div className=\"modalAgentes\">\r\n      <button className=\"buttonClose\" onClick={props.handleClose}>\r\n        <img className=\"closeIcon\" src={close} alt=\"\" />\r\n      </button>\r\n      {props.agentes.map((agente) => (\r\n        <div className=\"container-fluid agentesContainer\">\r\n          <div\r\n            onClick={() => {\r\n              props.handleTransferir(agente.cedula, props.selected.numTelUsr);\r\n              props.handleClose();\r\n            }}\r\n            className=\"row agenteContainer\"\r\n          >\r\n            <h2 className=\"nombre\">{agente.name}</h2>\r\n            {agente.logged === \"true\" && (\r\n              <h2 className=\"estadoConectado\">DISPONIBLE</h2>\r\n            )}\r\n            {agente.logged === \"false\" && (\r\n              <h2 className=\"estadoDesconectado\">DESCONECTADO</h2>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalAgentes;\r\n","import React, { useState } from \"react\";\r\nimport \"./TituloConversacion.css\";\r\nimport backArrow from \"./backArrow.svg\";\r\nimport options from \"./options.svg\";\r\nimport ModalAgentes from \"../ModalAgentes/ModalAgentes\";\r\nimport axios from \"axios\";\r\n\r\nfunction TituloConversacion(props) {\r\n  let [menuAbierto, setMenuAbierto] = useState(false);\r\n  let [showAgents, setShowAgents] = useState(false);\r\n  let [agentes, setAgentes] = useState([]);\r\n\r\n  let handleClick = () => {\r\n    setMenuAbierto(!menuAbierto);\r\n  };\r\n\r\n  let handleFileSumbit = (e) => {\r\n    setMenuAbierto(false);\r\n    props.setEsperando(true);\r\n    let archivoSeleccionado = e.target.files.item(0);\r\n    const fd = new FormData();\r\n    fd.append(\"name\", \"mateo\");\r\n    debugger;\r\n    fd.append(\"file\", archivoSeleccionado);\r\n    axios\r\n      .post(\r\n        `/chatcenterkit/agentmessage?usrtelnum=${props.selected.numTelUsr}&cedula=${props.currentUser.id}`,\r\n        fd,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        debugger;\r\n        let data = response.data;\r\n        let buscada = data.find(\r\n          (conv) => conv.numTelUsr === props.selected.numTelUsr\r\n        );\r\n        props.setConversaciones(data);\r\n        props.setSelected(buscada);\r\n        document.getElementById(\"sendMessageSound\").play();\r\n        props.setEsperando(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  let handleModal = () => {\r\n    fetch(`/mongo/agentesstatus/${props.currentUser.id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((response) => {\r\n      response.json().then((agentes) => setAgentes(agentes));\r\n    });\r\n    setShowAgents(!showAgents);\r\n    setMenuAbierto(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"contenedorTitulo\">\r\n        <div className=\"fondoBlanco d-flex bd-highlight\">\r\n          <button\r\n            className=\"backButton bd-highlight\"\r\n            onClick={props.handleBack}\r\n          >\r\n            <img src={backArrow} alt=\"\" className=\"backArrow\" />\r\n          </button>\r\n          <h1 className=\"title bd-highlight\">\r\n            {props.selected.createdByUserId || props.selected.nameUsr}\r\n          </h1>\r\n          {!props.historial && (\r\n            <React.Fragment>\r\n              <button\r\n                className=\"opcionesButton ml-auto bd-highlight\"\r\n                onClick={handleClick}\r\n              >\r\n                <img\r\n                  src={options}\r\n                  alt=\"options\"\r\n                  className=\"opcionesConversacion\"\r\n                />\r\n              </button>\r\n              {menuAbierto && (\r\n                <div className=\"menuConv\">\r\n                  <input\r\n                    className=\"inputfile\"\r\n                    type=\"file\"\r\n                    name=\"file\"\r\n                    id=\"file\"\r\n                    onChange={handleFileSumbit}\r\n                  />\r\n                  {!props.esperando && (\r\n                    <label className=\"menuTitleConv\" for=\"file\">\r\n                      Adjuntar Archivo\r\n                    </label>\r\n                  )}\r\n                  {props.esperando && (\r\n                    <label className=\"menuTitleConvEsperando\">\r\n                      Enviando archivo...\r\n                    </label>\r\n                  )}\r\n                  <div onClick={handleModal} className=\"menuTitleConv\">\r\n                    Transferir Conversación\r\n                  </div>\r\n                  <div\r\n                    onClick={() =>\r\n                      props.handleTerminarConversacion(props.selected)\r\n                    }\r\n                    id=\"terminarConv\"\r\n                    className=\"menuTitleConv\"\r\n                  >\r\n                    Terminar Conversacion\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {showAgents && (\r\n        <ModalAgentes\r\n          handleClose={handleModal}\r\n          agentes={agentes}\r\n          handleTransferir={props.handleTransferir}\r\n          selected={props.selected}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TituloConversacion;\r\n","export default __webpack_public_path__ + \"static/media/sendIcon.306fdb06.svg\";","export default __webpack_public_path__ + \"static/media/quickMessages.bdf7028c.svg\";","import React, { useRef } from \"react\";\r\nimport \"./InputMensaje.css\";\r\nimport sendIcon from \"./sendIcon.svg\";\r\nimport quickImage from \"./quickMessages.svg\";\r\nimport { useState } from \"react\";\r\n\r\nfunction InputMensaje(props) {\r\n  const inputRef = useRef();\r\n  const [mensajesRapidos, setMensajesRapidos] = useState(false);\r\n\r\n  let handleSend = () => {\r\n    props.sendMessage(inputRef.current.value, props.selected.numTelUsr);\r\n    inputRef.current.value = \"\";\r\n  };\r\n\r\n  let handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  let handleMensajes = () => {\r\n    setMensajesRapidos(!mensajesRapidos);\r\n  };\r\n\r\n  let handleSetQuickMessage = (message) => {\r\n    inputRef.current.value = message;\r\n    setMensajesRapidos(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"myInputContainer\">\r\n      <div className=\"row\">\r\n        {!props.esperando && (\r\n          <input\r\n            className=\"myInput\"\r\n            type=\"text\"\r\n            disabled={props.esperando}\r\n            ref={inputRef}\r\n            onKeyPress={handleKeyPress}\r\n          />\r\n        )}\r\n        {props.esperando && (\r\n          <input\r\n            className=\"myDisabledInput\"\r\n            type=\"text\"\r\n            disabled={props.esperando}\r\n            ref={inputRef}\r\n            value=\"Enviando Mensaje, porfavor espere...\"\r\n          />\r\n        )}\r\n        <button\r\n          onClick={handleSend}\r\n          disabled={props.esperando}\r\n          className=\"sendButton\"\r\n        >\r\n          <img src={sendIcon} alt=\"Boton Enviar\" className=\"iconoEnviar\" />\r\n        </button>\r\n        <div className=\"fondoBotonRapido\">\r\n          <button onClick={handleMensajes} className=\"quickSendContainer\">\r\n            <img className=\"quickSend\" src={quickImage} alt=\"\" />\r\n          </button>\r\n        </div>\r\n        {mensajesRapidos && (\r\n          <div className=\"contenedorMensajesRapidos\">\r\n            <div\r\n              onClick={() =>\r\n                handleSetQuickMessage(\r\n                  `Buenos Días, mi nombre es ${props.usuario} de Serv. ¿En que puedo ayudarlo el día de hoy?`\r\n                )\r\n              }\r\n              class=\"mensajeRapido\"\r\n            >\r\n              Buenos Días, mi nombre es {props.usuario} de Serv. ¿En que puedo\r\n              ayudarlo el día de hoy?\r\n            </div>\r\n            <div>\r\n              <div\r\n                onClick={() =>\r\n                  handleSetQuickMessage(\"¿Puedo ayudarlo con alguien más?\")\r\n                }\r\n                class=\"mensajeRapido\"\r\n              >\r\n                ¿Puedo ayudarlo con alguien más?\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div\r\n                onClick={() =>\r\n                  handleSetQuickMessage(\r\n                    \"Ha sido un placer atenderlo el día de hoy. Hasta luego.\"\r\n                  )\r\n                }\r\n                class=\"mensajeRapido\"\r\n              >\r\n                Ha sido un placer atenderlo el día de hoy. Hasta luego.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputMensaje;\r\n","export default __webpack_public_path__ + \"static/media/ChatCenterLogo.2fd93857.svg\";","import React from \"react\";\r\nimport \"./MensajeRecibido.css\";\r\n\r\nlet parseFecha = (fecha) => {\r\n  let partes = fecha.split(\"-\");\r\n  let ano = partes[0].substring(2, 5);\r\n  let mes = partes[1];\r\n  let final = partes[2];\r\n  let dia = final.substring(0, 2);\r\n  let hora = final.substring(3, 8);\r\n  return `${dia}/${mes}/${ano} ${hora}`;\r\n};\r\n\r\nfunction MensajeRecibido(props) {\r\n  return (\r\n    <div className=\"mensajeRecibido\">\r\n      {props.mensaje.parts && (\r\n        <React.Fragment>\r\n          <p className=\"texto\">{props.mensaje.texto}</p>\r\n          <p className=\"fechaMensaje\">{parseFecha(props.mensaje.fecha)}</p>\r\n        </React.Fragment>\r\n      )}\r\n      {!props.mensaje.parts && (\r\n        <React.Fragment>\r\n          <p className=\"texto\">{props.mensaje.texto}</p>\r\n          <p className=\"fechaMensaje\">{parseFecha(props.mensaje.fecha)}</p>\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MensajeRecibido;\r\n","import React from \"react\";\r\nimport \"./MensajeEnviado.css\";\r\n\r\nlet parseFecha = (fecha) => {\r\n  let partes = fecha.split(\"-\");\r\n  let ano = partes[0].substring(2, 5);\r\n  let mes = partes[1];\r\n  let final = partes[2];\r\n  let dia = final.substring(0, 2);\r\n  let hora = final.substring(3, 8);\r\n  return `${dia}/${mes}/${ano} ${hora}`;\r\n};\r\n\r\nfunction MensajeEnviado(props) {\r\n  return (\r\n    <div id={props.mensaje.mensajeid} className=\"mensajeEnviado ml-auto\">\r\n      {!props.mensaje.url && (\r\n        <React.Fragment>\r\n          <p className=\"texto\">{props.mensaje.texto}</p>\r\n          <h6 className=\"agente\">{props.mensaje.agente || \"Bot\"}</h6>\r\n          <p className=\"fechaMensaje\">{parseFecha(props.mensaje.fecha)}</p>\r\n        </React.Fragment>\r\n      )}\r\n      {(props.mensaje.mimetype === \"image/jpeg\" ||\r\n        props.mensaje.mimetype === \"image/gif\" ||\r\n        props.mensaje.mimetype === \"image/png\") && (\r\n        <React.Fragment>\r\n          <img className=\"imagenAdjunta\" src={props.mensaje.url} alt=\"\" />\r\n          <h6 className=\"agente\">{props.mensaje.agente}</h6>\r\n          <p className=\"fechaMensaje\">{parseFecha(props.mensaje.fecha)}</p>\r\n        </React.Fragment>\r\n      )}\r\n      {props.mensaje.mimetype === \"application/pdf\" && (\r\n        <React.Fragment>\r\n          <iframe\r\n            title=\"myfrme01FDC\"\r\n            className=\"imagenAdjunta\"\r\n            src={props.mensaje.url}\r\n            type=\"application/pdf\"\r\n          />\r\n          <h6 className=\"agente\">{props.mensaje.agente}</h6>\r\n          <p className=\"fechaMensaje\">{parseFecha(props.mensaje.fecha)}</p>\r\n        </React.Fragment>\r\n      )}\r\n      {props.mensaje.parts && props.mensaje.parts[0].partType === \"inline\" && (\r\n        <React.Fragment>\r\n          <p className=\"texto\">{props.mensaje.parts[0].payload.content}</p>\r\n          <h6 className=\"agente\">{props.mensaje.parts[1].payload.content}</h6>\r\n          <p className=\"fechaMensaje\">{parseFecha(props.mensaje.fecha)}</p>\r\n        </React.Fragment>\r\n      )}\r\n      {props.mensaje.parts &&\r\n        props.mensaje.parts[0].partType === \"attachment\" &&\r\n        props.mensaje.parts[0].payload.type.substring(0, 5) === \"image\" && (\r\n          <React.Fragment>\r\n            <img\r\n              className=\"imagenAdjunta\"\r\n              src={props.mensaje.parts[0].payload._downloadURL}\r\n              alt=\"\"\r\n            />\r\n            <h6 className=\"agente\">{props.mensaje.text}</h6>\r\n            <p className=\"fechaMensaje\">{parseFecha(props.mensaje.fecha)}</p>\r\n          </React.Fragment>\r\n        )}\r\n      {props.mensaje.parts &&\r\n        props.mensaje.parts[0].partType === \"attachment\" &&\r\n        props.mensaje.parts[0].payload.type === \"application/pdf\" && (\r\n          <React.Fragment>\r\n            <iframe\r\n              title=\"myfrme02FDC\"\r\n              className=\"imagenAdjunta\"\r\n              src={props.mensaje.parts[0].payload._downloadURL}\r\n              type=\"application/pdf\"\r\n            />\r\n            <h6 className=\"agente\">{props.mensaje.texto}</h6>\r\n            <p className=\"fechaMensaje\">{parseFecha(props.mensaje.fecha)}</p>\r\n          </React.Fragment>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MensajeEnviado;\r\n","import React from \"react\";\r\nimport \"./MensajeServidor.css\";\r\n\r\nlet parseFecha = (fecha) => {\r\n  let partes = fecha.split(\"-\");\r\n  let ano = partes[0].substring(2, 5);\r\n  let mes = partes[1];\r\n  let final = partes[2];\r\n  let dia = final.substring(0, 2);\r\n  let hora = final.substring(3, 8);\r\n  return `${dia}/${mes}/${ano} ${hora}`;\r\n};\r\n\r\nfunction MensajeServidor(props) {\r\n  return (\r\n    <div className=\"mensajeServidor\">\r\n      <h6 className=\"textoServidor\">{props.mensaje.texto}</h6>\r\n      <p className=\"fechaMensajeServidor\">{parseFecha(props.mensaje.fecha)}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MensajeServidor;\r\n","import React, { useEffect } from \"react\";\r\nimport MensajeRecibido from \"../MensajeRecibido/MensajeRecibido\";\r\nimport MensajeEnviado from \"../MensajeEnviado/MensajeEnviado\";\r\nimport \"./Mensajes.css\";\r\nimport { useRef } from \"react\";\r\nimport MensajeServidor from \"../MensajeServidor/MensajeServidor\";\r\n\r\nfunction Mensajes(props) {\r\n  const bottomRef = useRef();\r\n  const containerRef = useRef();\r\n  useEffect(() => {\r\n    let d = document.getElementById(\"div\");\r\n    d.scrollTop = d.scrollHeight;\r\n\r\n    if (props.selected.mensajeBuscado) {\r\n      let a = document.getElementById(props.selected.mensajeBuscado.mensajeid);\r\n      a.scrollIntoView();\r\n      d.scrollTop = d.scrollTop - 63;\r\n    }\r\n  });\r\n  let renderMensaje = (mensaje) => {\r\n    if (mensaje.recibido || mensaje.fuente === \"bot\") {\r\n      return <MensajeServidor mensaje={mensaje} />;\r\n    } else if (mensaje.recibido || mensaje.fuente === \"usuario\") {\r\n      return <MensajeRecibido mensaje={mensaje} />;\r\n    } else {\r\n      return <MensajeEnviado mensaje={mensaje} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"div\" className=\"containerMessages\" ref={containerRef}>\r\n      {props.selected.mensajes.map((mensaje, key) => (\r\n        <div key={key}>{renderMensaje(mensaje)}</div>\r\n      ))}\r\n      <div id=\"bottom\" ref={bottomRef}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mensajes;\r\n","import React from \"react\";\r\nimport \"./ConversacionActual.css\";\r\nimport TituloConversacion from \"../TituloConversacion/TituloConversacion\";\r\nimport InputMensaje from \"../InputMensaje/InputMensaje\";\r\nimport Logo from \"./ChatCenterLogo.svg\";\r\nimport Mensajes from \"../Mensajes/Mensajes\";\r\n\r\nfunction ConversacionActual(props) {\r\n  return (\r\n    <div className=\"fondoGris\">\r\n      {props.selected && (\r\n        <React.Fragment>\r\n          <TituloConversacion\r\n            selected={props.selected}\r\n            currentUser={props.currentUser}\r\n            handleBack={props.handleBack}\r\n            handleTerminarConversacion={props.handleTerminarConversacion}\r\n            historial={props.historial}\r\n            handleTransferir={props.handleTransferir}\r\n            setSelected={props.setSelected}\r\n            setConversaciones={props.setConversaciones}\r\n            esperando={props.esperando}\r\n            setEsperando={props.setEsperando}\r\n          />\r\n          <Mensajes selected={props.selected} historial={props.historial} />\r\n          {!props.historial && (\r\n            <InputMensaje\r\n              selected={props.selected}\r\n              sendMessage={props.sendMessage}\r\n              usuario={props.currentUser.nombre}\r\n              esperando={props.esperando}\r\n              setEsperando={props.setEsperando}\r\n            />\r\n          )}\r\n        </React.Fragment>\r\n      )}\r\n      {!props.selected && (\r\n        <div className=\"contenedorBienvenida\">\r\n          <img src={Logo} alt=\"Chat Center Logo\" className=\"logo\" />\r\n          <h1 className=\"tituloSeleccionaAlgo\">\r\n            ¡Bienvenido {props.currentUser.nombre}!\r\n          </h1>\r\n          <p>Escoge una conversación para empezar a chatear.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConversacionActual;\r\n","export default __webpack_public_path__ + \"static/media/ChatCenterLogo.2fd93857.svg\";","export default __webpack_public_path__ + \"static/media/options.502312f9.svg\";","export default __webpack_public_path__ + \"static/media/lupa.91300910.svg\";","import React, { useRef } from \"react\";\r\nimport \"./HeaderConversaciones.css\";\r\nimport logo from \"./ChatCenterLogo.svg\";\r\nimport options from \"./options.svg\";\r\nimport { useState } from \"react\";\r\nimport lupa from \"./lupa.svg\";\r\n/* FDC import Conversacion from \"../Conversacion/Conversacion\";\r\nimport Conversaciones from \"../Conversaciones/Conversaciones\";\r\nimport InputMensaje from \"../InputMensaje/InputMensaje\"; */\r\n\r\nfunction HeaderConversaciones(props) {\r\n  const inputRef = useRef();\r\n\r\n  let [menuAbierto, setMenuAbierto] = useState(false);\r\n\r\n  let handleClick = () => {\r\n    setMenuAbierto(!menuAbierto);\r\n  };\r\n  let handleHistorial = () => {\r\n    props.setHistorial(true);\r\n    props.setSelected(undefined);\r\n    props.setConversaciones([]);\r\n    debugger;\r\n    fetch(`/mongo/getMyConversationsHistorial/${props.currentUser.id}`, {\r\n      //fetch(`/mongo/conversacionesAgente`, {\r\n      method: \"GET\",\r\n    }).then((response) => {\r\n      response.json().then((conversaciones) => {\r\n        props.setConversaciones(conversaciones);\r\n      });\r\n    });\r\n    setMenuAbierto(false);\r\n  };\r\n\r\n  let handleInicio = () => {\r\n    props.setHistorial(false);\r\n    setMenuAbierto(false);\r\n    props.setSelected(undefined);\r\n  };\r\n\r\n  let handleCerrarSesion = () => {\r\n    fetch(`/auth/logout/${props.currentUser.id}`, {\r\n      method: \"POST\",\r\n    });\r\n    props.logout(undefined);\r\n    props.setSelected(undefined);\r\n    setMenuAbierto(false);\r\n    sessionStorage.clear();\r\n  };\r\n\r\n  let search = () => {\r\n    if (inputRef.current.value === \"\") {\r\n      handleHistorial();\r\n    } else {\r\n      fetch(\r\n        `/mongo/conversacionessearchtext/${props.currentUser.id}/${inputRef.current.value}`,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      ).then((response) => {\r\n        response.json().then(async (mensajes) => {\r\n          console.log(mensajes);\r\n          let newConversaciones = [];\r\n          for (let i in mensajes) {\r\n            let response = await fetch(\r\n              `/mongo/conversacion/${mensajes[i].usrtelnum}`,\r\n              {\r\n                method: \"GET\",\r\n              }\r\n            );\r\n\r\n            let conversacion = await response.json();\r\n            conversacion.mensajeBuscado = mensajes[i];\r\n            newConversaciones.push(conversacion);\r\n          }\r\n          props.setConversaciones(newConversaciones);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  let handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      search();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"contenedor\">\r\n      <div className=\"flex-row\">\r\n        <img src={logo} alt=\"Company Logo\" className=\"logoEmpresa\" />\r\n        <button className=\"optionsButton float-right\" onClick={handleClick}>\r\n          <img src={options} alt=\"Options Icon\" className=\"optionsIcon\" />\r\n        </button>\r\n        {props.historial && (\r\n          <div className=\"contenedorBuscar\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"inputBuscar\"\r\n              ref={inputRef}\r\n              onKeyPress={handleKeyPress}\r\n            />\r\n            <button onClick={search} className=\"lupa\">\r\n              <img className=\"lupaIcon\" src={lupa} alt=\"\" />\r\n            </button>\r\n          </div>\r\n        )}\r\n        {menuAbierto && (\r\n          <div className=\"menu\">\r\n            {!props.historial && (\r\n              <div className=\"menuTitle\" onClick={handleHistorial}>\r\n                Historial\r\n              </div>\r\n            )}\r\n            {props.historial && (\r\n              <div className=\"menuTitle\" onClick={handleInicio}>\r\n                Inicio\r\n              </div>\r\n            )}\r\n            <div className=\"menuTitle\" onClick={handleCerrarSesion}>\r\n              Cerrar Sesion\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeaderConversaciones;\r\n","export default __webpack_public_path__ + \"static/media/sendMessage.06bebb04.mp3\";","export default __webpack_public_path__ + \"static/media/newMessage.b8181d53.mp3\";","export default __webpack_public_path__ + \"static/media/newMessageAbierto.be5a4e84.mp3\";","export default __webpack_public_path__ + \"static/media/newConversacion.f27ac64e.mp3\";","import React, { Component } from \"react\";\r\nimport Conversaciones from \"../Conversaciones/Conversaciones\";\r\nimport ConversacionActual from \"../ConversacionActual/ConversacionActual\";\r\nimport \"./Chat.css\";\r\nimport HeaderConversaciones from \"../HeaderConversaciones/HeaderConversaciones\";\r\nimport sendMessage from \"./sendMessage.mp3\";\r\nimport newMessage from \"./newMessage.mp3\";\r\nimport newMessageAbierto from \"./newMessageAbierto.mp3\";\r\nimport newConversacion from \"./newConversacion.mp3\";\r\nimport socketIOClient from \"socket.io-client\";\r\n// FDC import Conversacion from \"../Conversacion/Conversacion\";\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n}\r\n\r\nfunction compareConversations(conv1, conv2) {\r\n  if (\r\n    conv1.mensajes[conv1.mensajes.length - 1] &&\r\n    conv2.mensajes[conv2.mensajes.length - 1]\r\n  ) {\r\n    let fecha1 = conv1.mensajes[conv1.mensajes.length - 1].fecha;\r\n    let partes1 = fecha1.split(\"-\");\r\n    let ano1 = partes1[0].substring(0, 5);\r\n    let mes1 = partes1[1];\r\n    let final1 = partes1[2];\r\n    let dia1 = final1.substring(0, 2);\r\n    let hora1 = final1.substring(3, 5);\r\n    let minuto1 = final1.substring(6, 8);\r\n    let segundos1 = final1.substring(9, 11);\r\n    let date1 = new Date(\r\n      parseInt(ano1),\r\n      parseInt(mes1) - 1,\r\n      parseInt(dia1),\r\n      parseInt(hora1),\r\n      parseInt(minuto1),\r\n      parseInt(segundos1)\r\n    );\r\n\r\n    let fecha2 = conv2.mensajes[conv2.mensajes.length - 1].fecha;\r\n    let partes2 = fecha2.split(\"-\");\r\n    let ano2 = partes2[0].substring(0, 5);\r\n    let mes2 = partes2[1];\r\n    let final2 = partes2[2];\r\n    let dia2 = final2.substring(0, 2);\r\n    let hora2 = final2.substring(3, 5);\r\n    let minuto2 = final2.substring(6, 8);\r\n    let segundos2 = final2.substring(9, 11);\r\n    let date2 = new Date(\r\n      parseInt(ano2),\r\n      parseInt(mes2) - 1,\r\n      parseInt(dia2),\r\n      parseInt(hora2),\r\n      parseInt(minuto2),\r\n      parseInt(segundos2)\r\n    );\r\n\r\n    let comparison = \"\";\r\n    if (date1.getTime() > date2.getTime()) {\r\n      comparison = -1;\r\n    } else if (date1.getTime() < date2.getTime()) {\r\n      comparison = 1;\r\n    } else {\r\n      comparison = 0;\r\n    }\r\n\r\n    return comparison;\r\n  } else {\r\n    return 0;\r\n  }\r\n}\r\n\r\nclass Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      principal: true,\r\n      selectedConv: undefined,\r\n      windowDimensions: getWindowDimensions(),\r\n      conversaciones: [],\r\n      historial: false,\r\n      esperando: false,\r\n    };\r\n  }\r\n\r\n  // Abre el socket principal con el servidor\r\n  socket = socketIOClient(\"https://my-chat-kit.herokuapp.com/\");\r\n\r\n  handleResize = () => {\r\n    this.setState({ windowDimensions: getWindowDimensions() });\r\n  };\r\n\r\n  handleClose = async (e) => {\r\n    /**\r\n    let response = await fetch(\"/auth/logout \", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        user: this.props.chatkit.chatkit.currentUser.id\r\n      })\r\n    });\r\n    */\r\n    navigator.sendBeacon(`/auth/logout/${this.props.currentUser.id}`, {});\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleTerminarConversacion = (conversacion) => {\r\n    fetch(\r\n      `/mongo/terminarconversacion/${conversacion.numTelUsr}/${this.props.currentUser.id}`,\r\n      {\r\n        method: \"POST\",\r\n      }\r\n    ).then((response) => {\r\n      this.pedirConversaciones();\r\n    });\r\n    this.setSelected(undefined);\r\n    this.unsuscribeDeConversacion(conversacion.numTelUsr);\r\n  };\r\n\r\n  handleTransferir = (agenteNuevo, cliente) => {\r\n    fetch(\r\n      `/chatcenterkit/transferirAgente/${this.props.currentUser.id}/${agenteNuevo}/${cliente}`,\r\n      {\r\n        method: \"POST\",\r\n      }\r\n    ).then((response) => {\r\n      this.pedirConversaciones();\r\n    });\r\n    this.setSelected(undefined);\r\n    this.unsuscribeDeConversacion(cliente);\r\n  };\r\n\r\n  configurarSocket = () => {\r\n    this.socket.on(\"connect_error\", (error) => {\r\n      alert(\r\n        \"No se puede conectar con el servidor. Haz click en aceptar para volver a intentar.\"\r\n      );\r\n    });\r\n\r\n    this.socket.on(\"connect\", () => {\r\n      console.log(\"Main socket opnened\");\r\n      // Envia mensaje con identificacion para que el servidor le cree una room\r\n      this.socket.emit(\"identificacion\", this.props.currentUser.id);\r\n      this.pedirConversaciones();\r\n    });\r\n\r\n    //le llega una nueva conversacion\r\n    this.socket.on(\"newConversation\", (clientId) => {\r\n      console.log(\"newConversation\");\r\n      document.getElementById(\"newConversacionSound\").play();\r\n      // vuelve a pedir sus conversaciones al servidor\r\n      this.pedirConversaciones();\r\n      // se suscribe al room de ese cliente\r\n      this.suscribirseAConversacion(clientId);\r\n    });\r\n\r\n    this.socket.on(\"newMessage\", (clientId) => {\r\n      console.log(\"newMessage\");\r\n      // vuelve a pedir sus conversaciones al servidor\r\n      this.pedirConversaciones();\r\n      this.receiveSound(clientId);\r\n    });\r\n\r\n    this.socket.on(\"disconnect\", () => {\r\n      alert(\r\n        \"Ups! Se ha perdido la conexión. Haz click en aceptar para volver a intentar.\"\r\n      );\r\n    });\r\n  };\r\n\r\n  pedirConversaciones = () => {\r\n    fetch(`/mongo/getMyConversations/${this.props.currentUser.id}`).then(\r\n      (response) => {\r\n        response.json().then((data) => {\r\n          data.sort(compareConversations);\r\n          this.setState({ conversaciones: data });\r\n          for (let i in data) {\r\n            if (\r\n              this.state.selectedConv &&\r\n              data[i].numTelUsr === this.state.selectedConv.numTelUsr\r\n            ) {\r\n              this.setState({ selectedConv: data[i] });\r\n            }\r\n\r\n            this.suscribirseAConversacion(data[i].numTelUsr);\r\n          }\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  suscribirseAConversacion = (clientId) => {\r\n    this.socket.emit(\"suscribeTo\", clientId);\r\n    console.log(\"suscribed to \", clientId);\r\n  };\r\n\r\n  unsuscribeDeConversacion = (clientId) => {\r\n    this.socket.emit(\"unsuscribeFrom\", clientId);\r\n    console.log(\"unsuscribed from \", clientId);\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Detectar Cerrar ----------------------------------------------------------------------\r\n    window.addEventListener(\"beforeunload\", this.handleClose);\r\n    // --------------------------------------------------------------------------------------------\r\n\r\n    // Tamaño de la pantalla ----------------------------------------------------------------------\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n    // --------------------------------------------------------------------------------------------\r\n    this.configurarSocket();\r\n\r\n    setInterval(() => {\r\n      fetch(\"https://my-chat-kit.herokuapp.com/monitor\").then((response) => {\r\n        response.text().then((data) => console.log(data));\r\n      });\r\n    }, 1500000);\r\n\r\n    fetch(\"/auth/login\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        user: sessionStorage.id,\r\n        password: sessionStorage.password,\r\n      }),\r\n    });\r\n  }\r\n\r\n  firstLoad = () => {\r\n    let currentUser = this.props.chatkit.chatkit.currentUser;\r\n\r\n    let newConversaciones = { ...currentUser.rooms };\r\n    newConversaciones = Object.values(newConversaciones);\r\n    for (let i in newConversaciones) {\r\n      newConversaciones[i].mensajes = [];\r\n      currentUser\r\n        .subscribeToRoomMultipart({\r\n          roomId: newConversaciones[i].id,\r\n          hooks: {\r\n            onMessage: (message) => {\r\n              this.addMessageToConversacion(message, newConversaciones[i].id);\r\n              this.playMessageSound(message);\r\n            },\r\n          },\r\n          messageLimit: 0,\r\n        })\r\n        .then(() => {\r\n          currentUser\r\n            .fetchMultipartMessages({\r\n              roomId: newConversaciones[i].id,\r\n              direction: \"older\",\r\n              limit: 100,\r\n            })\r\n            .then((messages) => {\r\n              for (let j in messages) {\r\n                this.addMessageToConversacion(\r\n                  messages[j],\r\n                  newConversaciones[i].id\r\n                );\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(`Error fetching messages: ${err}`);\r\n            });\r\n        });\r\n    }\r\n    this.setState({ conversaciones: newConversaciones });\r\n  };\r\n\r\n  receiveSound = (client) => {\r\n    if (\r\n      this.state.selectedConv &&\r\n      client === this.state.selectedConv.numTelUsr\r\n    ) {\r\n      document.getElementById(\"newMessageAbiertoSound\").play();\r\n    } else {\r\n      document.getElementById(\"newMessageSound\").play();\r\n    }\r\n  };\r\n\r\n  addMessageToConversacion = (message, roomId) => {\r\n    let newMensaje = { ...message };\r\n\r\n    if (message.senderId.substring(0, 8) === \"whatsapp\") {\r\n      newMensaje.recibido = true;\r\n    } else if (message.senderId.substring(0, 10) === \"0000000000\") {\r\n      newMensaje.recibido = true;\r\n      newMensaje.servidor = true;\r\n    } else {\r\n      newMensaje.recibido = false;\r\n    }\r\n    let newConversaciones = [...this.state.conversaciones];\r\n    for (let i in newConversaciones) {\r\n      if (newConversaciones[i].id === roomId) {\r\n        newConversaciones[i].mensajes.push(newMensaje);\r\n        break;\r\n      }\r\n    }\r\n\r\n    newConversaciones.sort(compareConversations);\r\n    this.setState({ conversaciones: newConversaciones });\r\n  };\r\n\r\n  sendMessage = (message, clientId) => {\r\n    debugger;\r\n    if (message !== \"\") {\r\n      this.setEsperando(true);\r\n      console.log(this.props.currentUser.id + \" \" + message + \" \" + clientId);\r\n      fetch(`/chatcenterkit/agentmessage`, {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          mensaje: message,\r\n          from: this.props.currentUser.id,\r\n          to: clientId,\r\n          type: \"text\",\r\n        }),\r\n      })\r\n        .then((response) => {\r\n          response.json().then((data) => {\r\n            let buscada = data.find((conv) => conv.numTelUsr === clientId);\r\n            this.setState({ conversaciones: data, selectedConv: buscada });\r\n            document.getElementById(\"sendMessageSound\").play();\r\n            this.setEsperando(false);\r\n          });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  setConversaciones = (conversaciones) => {\r\n    this.setState({ conversaciones: conversaciones });\r\n  };\r\n\r\n  setHistorial = (historial) => {\r\n    if (!historial) {\r\n      this.socket = socketIOClient(\"https://my-chat-kit.herokuapp.com/\");\r\n      this.pedirConversaciones();\r\n      this.configurarSocket();\r\n    }\r\n    this.setState({ historial: historial });\r\n  };\r\n\r\n  renderChiquito = () => {\r\n    return (\r\n      <div className=\"row fullHeight\">\r\n        {this.state.principal && (\r\n          <div className=\"col-12 noPadding\">\r\n            <HeaderConversaciones\r\n              currentUser={this.props.currentUser}\r\n              setSelected={this.setSelected}\r\n              logout={this.props.logout}\r\n              setConversaciones={this.setConversaciones}\r\n              setHistorial={this.setHistorial}\r\n              historial={this.state.historial}\r\n            />\r\n            <Conversaciones\r\n              selected={this.state.selectedConv}\r\n              conversaciones={this.state.conversaciones}\r\n              handleClick={this.handleClick}\r\n              historial={this.state.historial}\r\n            />\r\n          </div>\r\n        )}\r\n        {!this.state.principal && (\r\n          <div className=\"col-12 noPadding\">\r\n            <ConversacionActual\r\n              usuario={this.props.currentUser.name}\r\n              currentUser={this.props.currentUser}\r\n              selected={this.state.selectedConv}\r\n              handleBack={this.handleBack}\r\n              handleTerminarConversacion={this.handleTerminarConversacion}\r\n              sendMessage={this.sendMessage}\r\n              historial={this.state.historial}\r\n              handleTransferir={this.handleTransferir}\r\n              setSelected={this.setSelected}\r\n              setConversaciones={this.setConversaciones}\r\n              esperando={this.state.esperando}\r\n              setEsperando={this.setEsperando}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderGrande = () => {\r\n    return (\r\n      <div className=\"row fullHeight\">\r\n        <div className=\"col-3 noPadding\">\r\n          <HeaderConversaciones\r\n            currentUser={this.props.currentUser}\r\n            setSelected={this.setSelected}\r\n            logout={this.props.logout}\r\n            setConversaciones={this.setConversaciones}\r\n            setHistorial={this.setHistorial}\r\n            historial={this.state.historial}\r\n          />\r\n          <Conversaciones\r\n            selected={this.state.selectedConv}\r\n            conversaciones={this.state.conversaciones}\r\n            handleClick={this.handleClick}\r\n            historial={this.state.historial}\r\n          />\r\n        </div>\r\n        <div className=\"col-9 noPadding\">\r\n          <ConversacionActual\r\n            usuario={this.props.currentUser.name}\r\n            currentUser={this.props.currentUser}\r\n            selected={this.state.selectedConv}\r\n            handleBack={this.handleBack}\r\n            handleTerminarConversacion={this.handleTerminarConversacion}\r\n            sendMessage={this.sendMessage}\r\n            historial={this.state.historial}\r\n            handleTransferir={this.handleTransferir}\r\n            setSelected={this.setSelected}\r\n            setConversaciones={this.setConversaciones}\r\n            esperando={this.state.esperando}\r\n            setEsperando={this.setEsperando}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  handleClick = (selected) => {\r\n    if (this.state.windowDimensions.width > 750) {\r\n      this.setState({ selectedConv: selected });\r\n    } else {\r\n      this.setState({ selectedConv: selected });\r\n      this.setState({ principal: false });\r\n    }\r\n  };\r\n\r\n  handleBack = () => {\r\n    this.setState({ principal: true });\r\n    this.setState({ selectedConv: undefined });\r\n  };\r\n\r\n  setSelected = (selected) => {\r\n    this.setState({ selectedConv: selected });\r\n  };\r\n\r\n  setEsperando = (esperando) => {\r\n    this.setState({ esperando: esperando });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <audio id=\"sendMessageSound\" src={sendMessage} preload=\"true\"></audio>\r\n        <audio id=\"newMessageSound\" src={newMessage} preload=\"true\"></audio>\r\n        <audio\r\n          id=\"newConversacionSound\"\r\n          src={newConversacion}\r\n          preload=\"true\"\r\n        ></audio>\r\n        <audio\r\n          id=\"newMessageAbiertoSound\"\r\n          src={newMessageAbierto}\r\n          preload=\"true\"\r\n        ></audio>\r\n        <div className=\"container-fluid fullScreen\">\r\n          {this.state.windowDimensions.width > 750 && this.renderGrande()}\r\n          {this.state.windowDimensions.width <= 750 && this.renderChiquito()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chat;\r\n","export default __webpack_public_path__ + \"static/media/ChatCenterLogo.2fd93857.svg\";","import React, { useRef } from \"react\";\r\nimport \"./Login.css\";\r\nimport Logo from \"./ChatCenterLogo.svg\";\r\n\r\nfunction Login(props) {\r\n  const userRef = useRef();\r\n  const passwordRef = useRef();\r\n\r\n  const handleEntrar = () => {\r\n    fetch(\"/auth/login\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        user: userRef.current.value,\r\n        password: passwordRef.current.value,\r\n      }),\r\n    }).then((res) => {\r\n      res.json().then((data) => {\r\n        if (data.error) {\r\n          alert(data.error);\r\n        } else {\r\n          console.log(data);\r\n          sessionStorage.id = data.id;\r\n          sessionStorage.nombre = data.nombre;\r\n          sessionStorage.password = passwordRef.current.value;\r\n          props.setUser(data);\r\n        }\r\n      });\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"contenedorLogin\">\r\n      <img src={Logo} alt=\"Chat Center Logo\" className=\"logo\" />\r\n      <h1>¡Bienvenido a ChatCenter!</h1>\r\n      <h6>Por favor ingresa tu numero de cedula y contraseña</h6>\r\n      <input\r\n        className=\"inputLogin\"\r\n        type=\"text\"\r\n        ref={userRef}\r\n        placeholder=\"Cédula\"\r\n      />\r\n      <br />\r\n      <input\r\n        className=\"inputLogin\"\r\n        type=\"text\"\r\n        ref={passwordRef}\r\n        placeholder=\"Contraseña\"\r\n      />\r\n      <br />\r\n      <button className=\"botonLogin\" onClick={handleEntrar}>\r\n        Entrar\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Chat from \"./components/Chat/Chat\";\r\nimport Login from \"./components/Login/Login\";\r\n/*FDC import logo from \"./logo.svg\" */ import \"./App.css\";\r\n\r\nlet getSession = () => {\r\n  if (sessionStorage.id) {\r\n    return {\r\n      id: sessionStorage.id,\r\n      nombre: sessionStorage.nombre,\r\n    };\r\n  } else {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  const [currentUser, setCurrentUser] = useState(getSession());\r\n\r\n  useEffect(() => {\r\n    /**\r\n    socket.on(\"connect\", function () {\r\n      console.log(\"Main socket opnened\");\r\n      // Envia mensaje con identificacion para que el servidor le cree una room\r\n      socket.emit(\"identificacion\", \"1018505033\");\r\n    });\r\n\r\n    //le llega una nueva conversacion\r\n    socket.on(\"newConversation\", function (clientId) {\r\n      // se suscribe al room de ese cliente\r\n      socket.emit(\"suscribeTo\", clientId);\r\n    });\r\n\r\n    socket.on(\"newMessage\", function (clientId) {\r\n      //\r\n    });\r\n    */\r\n    /** EJEMPLO DE COMO ABRIR OTRO SOCKET CON OTRO DE LOS ENDPOINTS DEL SERVIDOR\r\n    const socket2 = socketIOClient(\"http://localhost:3001/client\");\r\n    */\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {currentUser && (\r\n        <Chat currentUser={currentUser} logout={setCurrentUser} />\r\n      )}\r\n      {!currentUser && <Login setUser={setCurrentUser} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}